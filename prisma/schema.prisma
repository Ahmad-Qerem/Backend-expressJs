// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  id_number    Int           @unique
  role         Role          @default(User)
  profile      Profile?
  transactions Transaction[]
  posts        Post[]
  Comment      Comment[]
}

model Profile {
  id            Int           @id @default(autoincrement())
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int           @unique
  images        Image[]
  gender        Gender
  name          String
  dateOfBirth   DateTime
  maritalStatus MaritalStatus
  city          String
  address       String
  phone         String
  mobile        String
}

model Image {
  id        Int      @id @default(autoincrement())
  name      String
  type      ImageType
  format    String
  created   DateTime @default(now())
  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId Int      @unique
}

model Transaction {
  id          Int      @id @default(autoincrement())
  title       String
  created     DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    Int
  description String
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  created     DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    Int       @unique
  description String
  comments    Comment[]
}

model Comment {
  id        Int      @id
  data      String
  created   DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int      @unique
  post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
}

model Court {
  id        Int    @id @default(autoincrement())
  name      String
  address   String
  latitude  Float
  longitude Float
}

enum Role {
  User
  Admin
  Lawyer
  Judge
}

enum ImageType {
  Profile
  Transaction
  Id
}

enum Gender {
  Male
  Female
}

enum MaritalStatus {
  Married
  single
  divorced
  widowed
}
